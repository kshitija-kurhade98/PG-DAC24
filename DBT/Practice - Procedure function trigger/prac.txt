create procedure inc_no(inout no int)
    set no = no + 1;
    end//
==>
mysql> set @c=3//
Query OK, 0 rows affected (0.02 sec)

mysql> call inc_no(@c)//
Query OK, 0 rows affected (0.02 sec)

mysql> select @c//
+------+
| @c   |
+------+
|    4 |
+------+
1 row in set (0.00 sec)
---------------------------------------------------------

create procedure print_num()
begin
declare n,i int default 1;
while i<6 do
 set n = i+1 ;
 set i = i+1;
 select n;
end while;
end//

=>
mysql> call print_num()
    -> //
+------+
| n    |
+------+
|    2 |
+------+
1 row in set (0.00 sec)

+------+
| n    |
+------+
|    3 |
+------+
1 row in set (0.02 sec)

+------+
| n    |
+------+
|    4 |
+------+
1 row in set (0.04 sec)

+------+
| n    |
+------+
|    5 |
+------+
1 row in set (0.07 sec)

+------+
| n    |
+------+
|    6 |
+------+
1 row in set (0.09 sec)

Query OK, 0 rows affected (0.11 sec)
---------------------------------------------------------

create procedure print_count()
begin
declare n,i int default 1;
while i<6 do
 set n = i+1 ;
 set i = i+1;
end while;
 select n;
end//

=>
mysql> call print_count()//
+------+
| n    |
+------+
|    6 |
+------+
1 row in set (0.00 sec)
---------------------------------------------------------------------------------------------------------

create procedure print12()
begin
declare cnt, i int default 0;
declare str varchar(50);
repeat
	set cnt = cnt + i;
	set i = i+1;
	until i>5
end repeat;
select cnt;
end//

=>
mysql> call print12()//
+------+
| cnt  |
+------+
|   15 |use 
+------+
1 row in set (0.00 sec)
------------------------------------------------------------------------------------------------

create procedure updateSalJob(id int, esal float(9,2), ejob varchar(18))
begin
 update empcpy set 
 sal = esal, job=ejob
 where empno = id;
end//

=>
mysql> select * from empcpy;
    -> //
+-------+----------+-----------+------+------------+---------+---------+--------+
| EMPNO | ENAME    | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |
+-------+----------+-----------+------+------------+---------+---------+--------+
|  1111 | Preet    | NULL      | NULL | NULL       |    NULL |    NULL |   NULL |

mysql> call updateSalJob(1111,20000,'Analyst')//
Query OK, 1 row affected (0.16 sec)

mysql> select * from empcpy;

+-------+----------+-----------+------+------------+----------+---------+--------+
| EMPNO | ENAME    | JOB       | MGR  | HIREDATE   | SAL      | COMM    | DEPTNO |
+-------+----------+-----------+------+------------+----------+---------+--------+
|  1111 | Preet    | Analyst   | NULL | NULL       | 20000.00 |    NULL |   NULL |

-----------------------------------------------------------------------------------------------

create procedure feedComm(eid int, out feed varchar(10))
begin
declare ecomm float(9,2) default 0;
select comm into ecomm from empcpy where empno=eid;
if ecomm>=300 then
	set feed = 'Good';
elseif ecomm<200 and ecomm>100 then
	set feed = 'ok';
else
	set feed = 'poor';
end if;
select eid,ecomm,feed;
end//

==>
mysql> call feedComm(7499,@f)//
+------+--------+------+
| eid  | ecomm  | feed |
+------+--------+------+
| 7499 | 300.00 | Good |
+------+--------+------+
1 row in set (0.03 sec)

Query OK, 0 rows affected (0.05 sec)

mysql> select @f
    -> //
+------+
| @f   |
+------+
| Good |
+------+

mysql> call feedComm(7844,@f)//
+------+-------+------+
| eid  | ecomm | feed |
+------+-------+------+
| 7844 |  0.00 | poor |
+------+-------+------+
1 row in set (0.00 sec)

------------------------------------------------------------------------------------------------------------------------------------------
Trigger :


create table auditcpy(
id int,
oldname varchar(20),
newname varchar(20),
oldjob varchar(20),
newjob varchar(20),
oldsal float(9,2),
newsal float(9,2),
olddept int,
newdept int,
userName varchar(50),
Date_Time datetime,
action varchar(10)
);

UPDATE TRIGGER :

create trigger updateEmpCpy before update on empcpy
for each row
insert into auditcpy values
(old.empno,old.ename,new.ename,old.job,new.job,old.sal,new.sal,old.deptno,new.deptno,user(),now(),'UPDATE'); 
=>

mysql> update empcpy set ename='Ravina',job='Analyst',sal=40000,deptno=10 where empno=9999//
Query OK, 1 row affected (0.27 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from auditCpy//
+------+----------+---------+--------+---------+--------+----------+---------+---------+----------------+---------------------+--------+
| id   | oldname  | newname | oldjob | newjob  | oldsal | newsal   | olddept | newdept | userName       | Date_Time           | action |
+------+----------+---------+--------+---------+--------+----------+---------+---------+----------------+---------------------+--------+
| 9999 | Kshitija | Ravina  | NULL   | Analyst |   NULL | 40000.00 |    NULL |      10 | root@localhost | 2024-04-07 16:10:44 | UPDATE |
+------+----------+---------+--------+---------+--------+----------+---------+---------+----------------+---------------------+--------+


DELETE TRIGGER:
create trigger deleteEmpCpy after delete on empcpy
for each row
insert into auditcpy values
(old.empno,old.ename,null,old.job,null,old.sal,null,old.deptno,null,user(),now(),'DELETE');

=>
mysql> delete from empcpy where empno=1111;
Query OK, 1 row affected (0.23 sec)

mysql> select * from auditcpy;
+------+----------+---------+--------+---------+----------+----------+---------+---------+----------------+---------------------+--------+
| id   | oldname  | newname | oldjob | newjob  | oldsal   | newsal   | olddept | newdept | userName       | Date_Time           | action |
+------+----------+---------+--------+---------+----------+----------+---------+---------+----------------+---------------------+--------+
| 9999 | Kshitija | Ravina  | NULL   | Analyst |     NULL | 40000.00 |    NULL |      10 | root@localhost | 2024-04-07 16:10:44 | UPDATE |
| 1111 | Sita     | NULL    | clerk  | NULL    | 35000.00 |     NULL |      30 |    NULL | root@localhost | 2024-04-07 16:16:00 | DELETE |
+------+----------+---------+--------+---------+----------+----------+---------+---------+----------------+---------------------+--------+

INSERT TRIGGER:

create trigger insertEmpCPy before insert on empcpy
for each row
insert into auditcpy values
(new.empno,null,new.ename,null,new.job,null,new.sal,null,new.deptno,user(),now(),'INSERT');

=>
mysql> insert into empcpy(empno,ename,job,sal,deptno) values(8888,'Ruhan','QA',25000,20);
Query OK, 1 row affected (0.29 sec)

mysql> select * from auditcpy;
+------+----------+---------+--------+---------+----------+----------+---------+---------+----------------+---------------------+--------+
| id   | oldname  | newname | oldjob | newjob  | oldsal   | newsal   | olddept | newdept | userName       | Date_Time           | action |
+------+----------+---------+--------+---------+----------+----------+---------+---------+----------------+---------------------+--------+
| 9999 | Kshitija | Ravina  | NULL   | Analyst |     NULL | 40000.00 |    NULL |      10 | root@localhost | 2024-04-07 16:10:44 | UPDATE |
| 1111 | Sita     | NULL    | clerk  | NULL    | 35000.00 |     NULL |      30 |    NULL | root@localhost | 2024-04-07 16:16:00 | DELETE |
| 8888 | NULL     | Ruhan   | NULL   | QA      |     NULL | 25000.00 |    NULL |      20 | root@localhost | 2024-04-07 16:21:02 | INSERT |
+------+----------+---------+--------+---------+----------+----------+---------+---------+----------------+---------------------+--------+

-------------------------------------------------------------------------------------------------------------------------------------------

FUNCTION :

create function calcExpCpy(ehire date) returns int
begin
declare exp int default 0;
set exp = floor(datediff(curdate(),ehire)/365);
return exp;
end//

==>
mysql> select empno,ename,sal,calcExpCpy(hiredate) Experience from empcpy;
+-------+--------+----------+------------+
| empno | ename  | sal      | Experience |
+-------+--------+----------+------------+
|  7369 | SMITH  |  1000.00 |         43 |
|  7499 | ALLEN  |  2000.00 |         43 |
|  7521 | WARD   |  1562.50 |         43 |
|  7566 | JONES  |  3718.75 |         43 |
|  7654 | MARTIN |  1562.50 |         42 |
|  7698 | BLAKE  |  3562.50 |         42 |
|  7782 | CLARK  |  3062.50 |         42 |
|  7788 | SCOTT  |  3750.00 |         41 |
|  7839 | KING   |  6250.00 |         42 |
|  7844 | TURNER |  1875.00 |         42 |
|  7876 | ADAMS  |  1375.00 |         41 |
|  7900 | JAMES  |  1187.50 |         42 |
|  7902 | FORD   |  3750.00 |         42 |
|  7934 | MILLER |  1625.00 |         42 |
|  9999 | Ravina | 40000.00 |       NULL |
|  8888 | Ruhan  | 25000.00 |       NULL |
+-------+--------+----------+------------+

mysql> select calcExpCpy('1952-12-02') as Exp//
+------+
| Exp  |
+------+
|   71 |
+------+

-----------------------------------------------------------------------------------------------------------------------------------------


create procedure updateEmpCpy(out mcnt int,out ccnt int,out ocnt int)
begin
	declare vfinished int default 0;
	declare vempno int;
	declare vename,vjob varchar(20);
	declare vsal,incsal float(9,2);
	
	declare empcur cursor for select empno,ename,job,sal from empcpy;
	
	declare continue handler for not found
	set vfinished = 1;
	
	open empcur;
	
	label1:loop
	 fetch empcur into vempno,vename,vjob,vsal;
	 if vfinished=1 then
	    leave label1;
	 end if;
	 
	if vjob='manager' then
	set mcnt = mcnt + 1;
	set incsal = vsal * 1.1;
	elseif vjob = 'clerk' then
	set ccnt = ccnt + 1;
	set incsal = vsal * 1.2;
	else
	set ocnt = ocnt + 1;
	set incsal = vsal*1;
	end if;
	 
	 update empcpy set sal = incsal where empno = vempno;
	 select vempno,vename,vjob,incsal;
	 end loop;
	 close empcur;
end//

=>
mysql> select * from empcpy//
+-------+--------+-----------+------+------------+----------+---------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL      | COMM    | DEPTNO |
+-------+--------+-----------+------+------------+----------+---------+--------+
|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  1152.00 |    NULL |     20 |
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 |  1600.00 |  300.00 |     30 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 |  1250.00 |  500.00 |     30 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 |  3599.75 |    NULL |     20 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 |  1250.00 | 1400.00 |     30 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 |  3448.50 |    NULL |     30 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 |  2964.50 |    NULL |     10 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1982-12-09 |  3000.00 |    NULL |     20 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 |  5000.00 |    NULL |     10 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 |  1500.00 |    0.00 |     30 |
|  7876 | ADAMS  | CLERK     | 7788 | 1983-01-12 |  1584.00 |    NULL |     20 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  1368.00 |    NULL |     30 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 |  3000.00 |    NULL |     20 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 |  1872.00 |    NULL |     10 |
|  9999 | Ravina | Analyst   | NULL | NULL       |     NULL |    NULL |     10 |
|  8888 | Ruhan  | QA        | NULL | NULL       | 25000.00 |    NULL |     20 |
+-------+--------+-----------+------+------------+----------+---------+--------+

after update:

mysql> call updateEmpCpy(@m,@c,@o)//
+--------+--------+-------+---------+
| vempno | vename | vjob  | incsal  |
+--------+--------+-------+---------+
|   7369 | SMITH  | CLERK | 1382.40 |
+--------+--------+-------+---------+
1 row in set (0.12 sec)

+--------+--------+----------+---------+
| vempno | vename | vjob     | incsal  |
+--------+--------+----------+---------+
|   7499 | ALLEN  | SALESMAN | 1600.00 |
+--------+--------+----------+---------+
1 row in set (0.17 sec)

+--------+--------+----------+---------+
| vempno | vename | vjob     | incsal  |
+--------+--------+----------+---------+
|   7521 | WARD   | SALESMAN | 1250.00 |
+--------+--------+----------+---------+
1 row in set (0.22 sec)

+--------+--------+---------+---------+
| vempno | vename | vjob    | incsal  |
+--------+--------+---------+---------+
|   7566 | JONES  | MANAGER | 3959.73 |
+--------+--------+---------+---------+
1 row in set (0.27 sec)

+--------+--------+----------+---------+
| vempno | vename | vjob     | incsal  |
+--------+--------+----------+---------+
|   7654 | MARTIN | SALESMAN | 1250.00 |
+--------+--------+----------+---------+
1 row in set (0.43 sec)

+--------+--------+---------+---------+
| vempno | vename | vjob    | incsal  |
+--------+--------+---------+---------+
|   7698 | BLAKE  | MANAGER | 3793.35 |
+--------+--------+---------+---------+
1 row in set (0.62 sec)

+--------+--------+---------+---------+
| vempno | vename | vjob    | incsal  |
+--------+--------+---------+---------+
|   7782 | CLARK  | MANAGER | 3260.95 |
+--------+--------+---------+---------+
1 row in set (0.71 sec)

+--------+--------+---------+---------+
| vempno | vename | vjob    | incsal  |
+--------+--------+---------+---------+
|   7788 | SCOTT  | ANALYST | 3000.00 |
+--------+--------+---------+---------+
1 row in set (0.81 sec)

+--------+--------+-----------+---------+
| vempno | vename | vjob      | incsal  |
+--------+--------+-----------+---------+
|   7839 | KING   | PRESIDENT | 5000.00 |
+--------+--------+-----------+---------+
1 row in set (0.89 sec)

+--------+--------+----------+---------+
| vempno | vename | vjob     | incsal  |
+--------+--------+----------+---------+
|   7844 | TURNER | SALESMAN | 1500.00 |
+--------+--------+----------+---------+
1 row in set (0.93 sec)

+--------+--------+-------+---------+
| vempno | vename | vjob  | incsal  |
+--------+--------+-------+---------+
|   7876 | ADAMS  | CLERK | 1900.80 |
+--------+--------+-------+---------+
1 row in set (0.99 sec)

+--------+--------+-------+---------+
| vempno | vename | vjob  | incsal  |
+--------+--------+-------+---------+
|   7900 | JAMES  | CLERK | 1641.60 |
+--------+--------+-------+---------+
1 row in set (1.24 sec)

+--------+--------+---------+---------+
| vempno | vename | vjob    | incsal  |
+--------+--------+---------+---------+
|   7902 | FORD   | ANALYST | 3000.00 |
+--------+--------+---------+---------+
1 row in set (1.34 sec)

+--------+--------+-------+---------+
| vempno | vename | vjob  | incsal  |
+--------+--------+-------+---------+
|   7934 | MILLER | CLERK | 2246.40 |
+--------+--------+-------+---------+
1 row in set (1.44 sec)

+--------+--------+---------+--------+
| vempno | vename | vjob    | incsal |
+--------+--------+---------+--------+
|   9999 | Ravina | Analyst |   NULL |
+--------+--------+---------+--------+
1 row in set (1.54 sec)

+--------+--------+------+----------+
| vempno | vename | vjob | incsal   |
+--------+--------+------+----------+
|   8888 | Ruhan  | QA   | 25000.00 |
+--------+--------+------+----------+

mysql> select * from empcpy;
    -> //
+-------+--------+-----------+------+------------+----------+---------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL      | COMM    | DEPTNO |
+-------+--------+-----------+------+------------+----------+---------+--------+
|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  1382.40 |    NULL |     20 |
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 |  1600.00 |  300.00 |     30 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 |  1250.00 |  500.00 |     30 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 |  3959.73 |    NULL |     20 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 |  1250.00 | 1400.00 |     30 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 |  3793.35 |    NULL |     30 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 |  3260.95 |    NULL |     10 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1982-12-09 |  3000.00 |    NULL |     20 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 |  5000.00 |    NULL |     10 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 |  1500.00 |    0.00 |     30 |
|  7876 | ADAMS  | CLERK     | 7788 | 1983-01-12 |  1900.80 |    NULL |     20 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  1641.60 |    NULL |     30 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 |  3000.00 |    NULL |     20 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 |  2246.40 |    NULL |     10 |
|  9999 | Ravina | Analyst   | NULL | NULL       |     NULL |    NULL |     10 |
|  8888 | Ruhan  | QA        | NULL | NULL       | 25000.00 |    NULL |     20 |
+-------+--------+-----------+------+------------+----------+---------+--------+


-------------------------------------------------------------------------------------------------------------------------------------------

create table OS(
os_id int primary key,
os_name varchar(20)
);

insert into OS(os_id,os_name) values
(1,'Android'),(2,'IOS'),(3,'Windows');

mysql> select * from mobiles//
+-------+---------+---------+-------+------+
| mobid | model   | company | price | osid |
+-------+---------+---------+-------+------+
|     1 | iphn13  | apple   | 80000 |    2 |
|     2 | note 10 | redmi   | 18000 |    1 |
|     3 | lumina  | nokia   |  1800 |    3 |
|     4 | m30s    | samsung | 18000 |    2 |
|     5 | a31     | oppo    | 11500 |    1 |
|     6 | narzo   | realme  |  9000 |    1 |
+-------+---------+---------+-------+------+
6 rows in set (0.00 sec)


create table mobiles(
mobid int primary key,
model varchar(20),
company varchar(20),
price int,
osid int,
constraint fk_osid foreign key (osid) references OS(os_id)
on update cascade
on delete cascade
);

insert into mobiles(mobid,model,company,price,osid) values
(1,'iphn13','apple',80000,2),(2,'note 10','redmi',18000,1),
(3,'lumina','nokia',1800,3),(4,'m30s','samsung',18000,2),
(5,'a31','oppo',11500,1),(6,'narzo','realme',9000,1);

mysql> select * from os//
+-------+---------+
| os_id | os_name |
+-------+---------+
|     1 | Android |
|     2 | IOS     |
|     3 | Windows |
+-------+---------+

1. write a subquery to display data of Mobiles who has OS Android (Use sub-query)

=>
select * from mobiles 
where osid = (select os_id from os where os_name='Android')//

+-------+---------+---------+-------+------+
| mobid | model   | company | price | osid |
+-------+---------+---------+-------+------+
|     2 | note 10 | redmi   | 18000 |    1 |
|     5 | a31     | oppo    | 11500 |    1 |
|     6 | narzo   | realme  |  9000 |    1 |
+-------+---------+---------+-------+------+
3 rows in set (0.00 sec)

2. Write a query to increse price 10% whose OS_id = 2, increase price 20% whose OS_id = 1 and other 30%. (Use only CASE)--
formula((initial price*percent/100)+initial price)
=>

update mobiles
set price = case
when osid = 2 then (price*1.1)
when osid = 1 then (price*1.2)
else (price*1.3)
end;

mysql> select * from mobiles //
+-------+---------+---------+-------+------+
| mobid | model   | company | price | osid |
+-------+---------+---------+-------+------+
|     1 | iphn13  | apple   | 88000 |    2 |
|     2 | note 10 | redmi   | 21600 |    1 |
|     3 | lumina  | nokia   |  2340 |    3 |
|     4 | m30s    | samsung | 19800 |    2 |
|     5 | a31     | oppo    | 13800 |    1 |
|     6 | narzo   | realme  | 10800 |    1 |
+-------+---------+---------+-------+------+
6 rows in set (0.00 sec)



3. Join two tables to Display the OS_ID, OS_NAME where the count of OS is greater than 1(use join and having).

=>
select o.os_id, o.os_name, count(*)
from mobiles m, os o
where m.osid = o.os_id
group by os_id,os_name
having count(*)>1

select o.os_id, o.os_name, count(*)
from mobiles m inner join os o
on m.osid = o.os_id
group by os_id,os_name
having count(*)>1

+-------+---------+----------+
| os_id | os_name | count(*) |
+-------+---------+----------+
|     1 | Android |        3 |
|     2 | IOS     |        2 |
+-------+---------+----------+